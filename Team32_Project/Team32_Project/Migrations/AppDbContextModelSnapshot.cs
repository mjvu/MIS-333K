// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Team32_Project.DAL;

namespace Team32_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Team32_Project.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Author");

                    b.Property<decimal>("Cost");

                    b.Property<string>("Description");

                    b.Property<int?>("GenreID");

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("PublicationDate");

                    b.Property<int>("Quantity");

                    b.Property<int>("Rating");

                    b.Property<int>("ReorderPoint");

                    b.Property<string>("Title");

                    b.HasKey("BookID");

                    b.HasIndex("GenreID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Team32_Project.Models.Coupon", b =>
                {
                    b.Property<int>("CouponID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CouponCode");

                    b.Property<decimal>("CouponPercent");

                    b.Property<bool>("CouponType");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("OrderID");

                    b.Property<DateTime>("StartDate");

                    b.Property<int?>("UserID");

                    b.HasKey("CouponID");

                    b.HasIndex("OrderID");

                    b.HasIndex("UserID");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Team32_Project.Models.CreditCard", b =>
                {
                    b.Property<int>("CreditCardID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreditCardNumber");

                    b.Property<int?>("UserID");

                    b.HasKey("CreditCardID");

                    b.HasIndex("UserID");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("Team32_Project.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("GenreName");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Team32_Project.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate");

                    b.Property<bool>("Status");

                    b.Property<int?>("UserID");

                    b.HasKey("OrderID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Team32_Project.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookID");

                    b.Property<int?>("OrderID");

                    b.Property<int>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("BookID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Team32_Project.Models.Reorder", b =>
                {
                    b.Property<int>("ReorderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ReorderType");

                    b.Property<int?>("UserID");

                    b.HasKey("ReorderID");

                    b.HasIndex("UserID");

                    b.ToTable("Reorders");
                });

            modelBuilder.Entity("Team32_Project.Models.ReorderDetail", b =>
                {
                    b.Property<int>("ReorderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookID");

                    b.Property<int>("Cost");

                    b.Property<int?>("ReorderID");

                    b.Property<int>("ReorderQuantity");

                    b.HasKey("ReorderDetailID");

                    b.HasIndex("BookID");

                    b.HasIndex("ReorderID");

                    b.ToTable("ReorderDetails");
                });

            modelBuilder.Entity("Team32_Project.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Approver");

                    b.Property<string>("Author");

                    b.Property<int?>("BookID");

                    b.Property<string>("CustomerReview");

                    b.Property<int>("Rating");

                    b.Property<int?>("UserID");

                    b.Property<int?>("UserID1");

                    b.HasKey("ReviewID");

                    b.HasIndex("BookID");

                    b.HasIndex("UserID");

                    b.HasIndex("UserID1");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Team32_Project.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<int>("PhoneNumber");

                    b.Property<bool>("Role");

                    b.Property<string>("State");

                    b.Property<string>("StreetAddress");

                    b.Property<int>("ZipCode");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Team32_Project.Models.Book", b =>
                {
                    b.HasOne("Team32_Project.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreID");
                });

            modelBuilder.Entity("Team32_Project.Models.Coupon", b =>
                {
                    b.HasOne("Team32_Project.Models.Order", "Order")
                        .WithMany("Coupons")
                        .HasForeignKey("OrderID");

                    b.HasOne("Team32_Project.Models.User")
                        .WithMany("Coupons")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Team32_Project.Models.CreditCard", b =>
                {
                    b.HasOne("Team32_Project.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Team32_Project.Models.Order", b =>
                {
                    b.HasOne("Team32_Project.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Team32_Project.Models.OrderDetail", b =>
                {
                    b.HasOne("Team32_Project.Models.Book", "Book")
                        .WithMany("OrderDetails")
                        .HasForeignKey("BookID");

                    b.HasOne("Team32_Project.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("Team32_Project.Models.Reorder", b =>
                {
                    b.HasOne("Team32_Project.Models.User")
                        .WithMany("Reorders")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("Team32_Project.Models.ReorderDetail", b =>
                {
                    b.HasOne("Team32_Project.Models.Book", "Book")
                        .WithMany("ReorderDetails")
                        .HasForeignKey("BookID");

                    b.HasOne("Team32_Project.Models.Reorder", "Reorder")
                        .WithMany("ReorderDetails")
                        .HasForeignKey("ReorderID");
                });

            modelBuilder.Entity("Team32_Project.Models.Review", b =>
                {
                    b.HasOne("Team32_Project.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookID");

                    b.HasOne("Team32_Project.Models.User")
                        .WithMany("ReviewsApproved")
                        .HasForeignKey("UserID");

                    b.HasOne("Team32_Project.Models.User")
                        .WithMany("ReviewsWritten")
                        .HasForeignKey("UserID1");
                });
#pragma warning restore 612, 618
        }
    }
}
